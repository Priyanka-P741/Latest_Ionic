{"version":3,"sources":["webpack:///src/app/pages/register/register.page.html","webpack:///src/app/pages/register/register-routing.module.ts","webpack:///src/app/pages/register/register.module.ts","webpack:///src/app/pages/register/register.page.scss","webpack:///src/app/pages/register/register.page.ts"],"names":["routes","path","component","RegisterPageRoutingModule","imports","forChild","exports","RegisterPageModule","declarations","providers","RegisterPage","router","alertController","device","registrationService","httpClient","formsBuilder","_registerUrl","items","device_id","uuid","validation_messages","type","message","myForm","group","name","required","email","compose","pattern","dob","image","address","manager","phone_no","console","log","value","event","file","target","files","patchValue","get","updateValueAndValidity","onUploadproduct","subscribe","data","error","alert","alertError","create","header","buttons","text","handler","navigate","present","selector","template"],"mappings":"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","file":"pages-register-register-module-es5.js","sourcesContent":["export default \"<!-- <ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"home\\\" color=\\\"warning\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title >Register</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header> -->\\r\\n\\r\\n<!--required pattern=\\\"^\\\\d{10}$\\\"-->\\r\\n\\r\\n<ion-content>\\r\\n  <form [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n      <ion-buttons slot=\\\"start\\\">\\r\\n        <ion-back-button color=\\\"light\\\" defaultHref=\\\"home\\\"></ion-back-button>\\r\\n      </ion-buttons>\\r\\n    \\r\\n    <div style=\\\" margin-left:10px; margin-right:10px;\\\">\\r\\n      \\r\\n       <h2 style=\\\"margin-left:25%; margin-bottom:20px; color:white; font: 1.5em sans-serif;;\\\" >REGISTRATION</h2>  \\r\\n    \\r\\n\\r\\n      <ion-item class=\\\"item\\\" lines=\\\"none\\\" style=\\\"border-radius: 40px;\\\"> \\r\\n        <ion-icon size=\\\"small\\\" name=\\\"person-outline\\\"></ion-icon>&nbsp; \\r\\n        <ion-label position=\\\"inline\\\">Name</ion-label>\\r\\n       <ion-input autocomplete=\\\"off\\\" type=\\\"text\\\" formControlName=\\\"name\\\" >\\r\\n       </ion-input>\\r\\n       <ng-container  *ngFor=\\\"let validation of validation_messages.name\\\">\\r\\n        <div *ngIf=\\\"myForm.get('name').hasError(validation.type) && myForm.get('name').touched\\\">\\r\\n         <small>**{{validation.message}}</small>\\r\\n       </div>\\r\\n       </ng-container>\\r\\n      \\r\\n    </ion-item>\\r\\n    \\r\\n  \\r\\n\\r\\n    <ion-item class=\\\"item\\\" lines=\\\"none\\\" style=\\\"border-radius: 40px;\\\">  \\r\\n      <ion-icon size=\\\"small\\\" name=\\\"mail-outline\\\"></ion-icon>&nbsp;\\r\\n      <ion-label position=\\\"inline\\\">Personal Email</ion-label>\\r\\n      <ion-input autocomplete=\\\"off\\\" type=\\\"email\\\" formControlName=\\\"email\\\">\\r\\n      </ion-input>\\r\\n  \\r\\n      <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\r\\n        <div *ngIf=\\\"myForm.get('email').hasError(validation.type) && myForm.get('email').touched\\\">\\r\\n          <small>**{{validation.message}}</small>\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </ion-item>\\r\\n    \\r\\n\\r\\n    <ion-item class=\\\"item\\\" lines=\\\"none\\\" style=\\\"border-radius: 40px;\\\">  \\r\\n      <ion-icon size=\\\"small\\\" name=\\\"calendar-outline\\\"></ion-icon>&nbsp;\\r\\n      <ion-label position=\\\"inline\\\">Date of Birth</ion-label>\\r\\n      <ion-datetime displayFormat=\\\"DD/MM/YYYY\\\" formControlName=\\\"dob\\\" min=\\\"1990-01-01\\\" max=\\\"2020-01-01\\\"></ion-datetime>\\r\\n      <ng-container *ngFor=\\\"let validation of validation_messages.dob\\\">\\r\\n        <div *ngIf=\\\"myForm.get('dob').hasError(validation.type) && myForm.get('dob').touched\\\">\\r\\n          <small>**{{validation.message}}</small>\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </ion-item>\\r\\n    <div>\\r\\n      \\r\\n    </div>\\r\\n    \\r\\n\\r\\n    <ion-item class=\\\"item\\\" lines=\\\"none\\\" style=\\\"border-radius: 40px;\\\">  \\r\\n      <ion-icon size='small' name=\\\"image-outline\\\"></ion-icon>&nbsp;\\r\\n      <ion-label position=\\\"inline\\\">Profile Picture</ion-label>\\r\\n      <ion-input type=\\\"file\\\" (change)=\\\"onFileSelected($event)\\\" accept=\\\"image/*\\\" formControlName=\\\"image\\\"></ion-input>\\r\\n      <ng-container *ngFor=\\\"let validation of validation_messages.image\\\">\\r\\n        <div *ngIf=\\\"myForm.get('image').hasError(validation.type) && myForm.get('image').touched\\\">\\r\\n          <small>**{{validation.message}}</small>\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </ion-item>\\r\\n    \\r\\n\\r\\n    <ion-item class=\\\"item\\\" lines=\\\"none\\\" style=\\\"border-radius: 40px;\\\">  \\r\\n      <ion-icon size=\\\"small\\\" name=\\\"business-outline\\\"></ion-icon>&nbsp;\\r\\n      <ion-label position=\\\"inline\\\">Address</ion-label>\\r\\n      <ion-input autocomplete=\\\"off\\\" type=\\\"text\\\" formControlName=\\\"address\\\"></ion-input>\\r\\n      <ng-container *ngFor=\\\"let validation of validation_messages.address\\\">\\r\\n        <div *ngIf=\\\"myForm.get('address').hasError(validation.type) && myForm.get('address').touched\\\">\\r\\n          <small>**{{validation.message}}</small>\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item class=\\\"item\\\" lines=\\\"none\\\" style=\\\"border-radius: 40px;\\\">  \\r\\n      <ion-icon size=\\\"small\\\" name=\\\"person-sharp\\\"></ion-icon>&nbsp;\\r\\n      <ion-label position=\\\"inline\\\">Reporting Manager</ion-label>\\r\\n      <ion-input autocomplete=\\\"off\\\" type=\\\"text\\\" formControlName=\\\"manager\\\"></ion-input>\\r\\n      <ng-container *ngFor=\\\"let validation of validation_messages.manager\\\">\\r\\n        <div *ngIf=\\\"myForm.get('manager').hasError(validation.type) && myForm.get('manager').touched\\\">\\r\\n          <small>**{{validation.message}}</small>\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item class=\\\"item\\\" lines=\\\"none\\\" style=\\\"border-radius: 40px;\\\">  \\r\\n      <ion-icon size=\\\"small\\\" name=\\\"call-outline\\\"></ion-icon>&nbsp;\\r\\n      <ion-label position=\\\"inline\\\">Mobile Number</ion-label>\\r\\n      <ion-input autocomplete=\\\"off\\\" type=\\\"number\\\" formControlName=\\\"phone_no\\\"></ion-input>\\r\\n      <ng-container *ngFor=\\\"let validation of validation_messages.phone_no\\\">\\r\\n        <div *ngIf=\\\"myForm.get('phone_no').hasError(validation.type) && myForm.get('phone_no').touched\\\">\\r\\n          <small>**{{validation.message}}</small>\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </ion-item>\\r\\n    \\r\\n    \\r\\n    <ion-item class=\\\"item\\\" lines=\\\"none\\\" style=\\\"border-radius: 40px;\\\">  \\r\\n      <ion-icon size=\\\"small\\\" name=\\\"desktop-sharp\\\"></ion-icon>&nbsp;\\r\\n        <ion-label position=\\\"inline\\\">  Device Id</ion-label>\\r\\n        <ion-input [(ngModel)]=\\\"device_id\\\" autocomplete=\\\"off\\\" type=\\\"text\\\"  formControlName=\\\"device_id\\\" ></ion-input>\\r\\n        <ng-container *ngFor=\\\"let validation of validation_messages.device_id\\\">\\r\\n          <div *ngIf=\\\"myForm.get('device_id').hasError(validation.type) && myForm.get('device_id').touched\\\">\\r\\n            <small class=\\\"text-danger\\\">**{{validation.message}}</small>\\r\\n          </div>\\r\\n        </ng-container>\\r\\n      </ion-item>\\r\\n  \\r\\n      </div>\\r\\n    <ion-row>\\r\\n      <ion-col></ion-col>\\r\\n      <ion-col >\\r\\n        <ion-button  shape=\\\"round\\\" [disabled]=\\\"!myForm.valid\\\" type=\\\"submit\\\" (click)=\\\"sendPostRequest()\\\">Sign Up</ion-button>\\r\\n      </ion-col>\\r\\n      <ion-col></ion-col>\\r\\n    </ion-row>\\r\\n  </form>\\r\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule , ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule} from '@angular/common/http';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\nimport { RegisterPage } from './register.page';\nimport { RegistrationService} from '../../services/registration.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HttpClientModule,\n    RegisterPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [RegisterPage],\n  providers: [\n    RegistrationService\n  ]\n})\nexport class RegisterPageModule {}\n","export default \"ion-content {\\n  --background: url('1599121471486.JPEG') no-repeat 0 0/100% 100%;\\n  position: relative;\\n  height: auto;\\n  width: 100%;\\n}\\n\\nsmall {\\n  color: red;\\n}\\n\\n.item {\\n  color: whitesmoke;\\n  border-radius: 50px;\\n  --border-width: 1.5px;\\n  --background: rgba(229, 189, 143, 0.459);\\n  margin-top: 5px;\\n}\\n\\nion-button {\\n  text-align: center;\\n  --border-color: rgb(10, 9, 70);\\n  --border-width: 2px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcmVnaXN0ZXIvQzpcXFVzZXJzXFxCSVZBU1xcRGVza3RvcFxcbGF0ZXN0X0VtcGxveWVlX21hbmFnZW1lbnRcXEVtcGxveWVlX21hbmFnZW1lbnQvc3JjXFxhcHBcXHBhZ2VzXFxyZWdpc3RlclxccmVnaXN0ZXIucGFnZS5zY3NzIiwic3JjL2FwcC9wYWdlcy9yZWdpc3Rlci9yZWdpc3Rlci5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFSSwrREFBQTtFQUVBLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7QUNESjs7QURJQTtFQUNJLFVBQUE7QUNESjs7QURNQTtFQUNJLGlCQUFBO0VBR0EsbUJBQUE7RUFFQSxxQkFBQTtFQUNBLHdDQUFBO0VBQ0EsZUFBQTtBQ05KOztBRFNFO0VBQ0Usa0JBQUE7RUFDQSw4QkFBQTtFQUNBLG1CQUFBO0FDTkoiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9yZWdpc3Rlci9yZWdpc3Rlci5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY29udGVudCB7XHJcbiAgICAvLyAtLWJhY2tncm91bmQ6IHVybChzcmMvYXNzZXRzL2ltZy9SZWdQYWdlLnBuZykgbm8tcmVwZWF0IHRvcCBjZW50ZXIvY292ZXIgZml4ZWQsICNmZmY7XHJcbiAgICAtLWJhY2tncm91bmQ6IHVybCguLi8uLi8uLi90aGVtZS8xNTk5MTIxNDcxNDg2LkpQRUcpICBuby1yZXBlYXQgMCAwLzEwMCUgMTAwJSA7XHJcblxyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbnNtYWxse1xyXG4gICAgY29sb3I6cmVkO1xyXG59XHJcbiAgXHJcblxyXG4gXHJcbi5pdGVtIHtcclxuICAgIGNvbG9yOndoaXRlc21va2U7XHJcbiAgICAvLyBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiA0MCU7XHJcbiAgICAvLyBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogNDAlO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTBweDtcclxuICAgIC8vIC0tYm9yZGVyLWNvbG9yOiByZ2IoMjQ1LCAxOTAsIDcxKTtcclxuICAgIC0tYm9yZGVyLXdpZHRoOiAxLjVweDtcclxuICAgIC0tYmFja2dyb3VuZDogcmdiYSgyMjksIDE4OSwgMTQzLCAwLjQ1OSk7XHJcbiAgICBtYXJnaW4tdG9wOiA1cHg7XHJcbiAgXHJcbiAgfVxyXG4gIGlvbi1idXR0b257XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAtLWJvcmRlci1jb2xvcjogcmdiKDEwLCA5LCA3MCk7XHJcbiAgICAtLWJvcmRlci13aWR0aDogMnB4O1xyXG5cclxuICB9IiwiaW9uLWNvbnRlbnQge1xuICAtLWJhY2tncm91bmQ6IHVybCguLi8uLi8uLi90aGVtZS8xNTk5MTIxNDcxNDg2LkpQRUcpIG5vLXJlcGVhdCAwIDAvMTAwJSAxMDAlIDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBoZWlnaHQ6IGF1dG87XG4gIHdpZHRoOiAxMDAlO1xufVxuXG5zbWFsbCB7XG4gIGNvbG9yOiByZWQ7XG59XG5cbi5pdGVtIHtcbiAgY29sb3I6IHdoaXRlc21va2U7XG4gIGJvcmRlci1yYWRpdXM6IDUwcHg7XG4gIC0tYm9yZGVyLXdpZHRoOiAxLjVweDtcbiAgLS1iYWNrZ3JvdW5kOiByZ2JhKDIyOSwgMTg5LCAxNDMsIDAuNDU5KTtcbiAgbWFyZ2luLXRvcDogNXB4O1xufVxuXG5pb24tYnV0dG9uIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAtLWJvcmRlci1jb2xvcjogcmdiKDEwLCA5LCA3MCk7XG4gIC0tYm9yZGVyLXdpZHRoOiAycHg7XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {Router} from '@angular/router';\r\nimport { HttpClient,HttpHeaders,HttpRequest} from '@angular/common/http';\r\nimport { AlertController } from '@ionic/angular';\r\nimport { RegistrationService } from 'src/app/services/registration.service';\r\nimport { Device } from '@ionic-native/device/ngx';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.page.html',\r\n  styleUrls: ['./register.page.scss'],\r\n})\r\nexport class RegisterPage implements OnInit {\r\n\r\n  private _registerUrl =\"https://emp-manage90.herokuapp.com/api/employees\"\r\n  items:any ={};\r\n  myForm: FormGroup;\r\n\r\n  device_id=this.device.uuid;\r\n\r\n  validation_messages = {\r\n    'name' : [\r\n     { type : 'required' , message: 'Name is required.' },\r\n    ],\r\n    'email' : [\r\n      { type : 'required' , message: 'Email is required.' },\r\n      { type : 'pattern' , message: 'Please enter a valid email.' }\r\n     ],\r\n     'dob' : [\r\n      { type : 'required' , message: 'Date of Birth is required.' },\r\n     ],\r\n     'image' : [\r\n      { type : 'required' , message: 'Profile Picture is required.' },\r\n     ],\r\n     'address' : [\r\n      { type : 'required' , message: 'Address is required.' },\r\n     ],\r\n     'manager' : [\r\n      { type : 'required' , message: 'manager is required.' },\r\n     ],\r\n     'phone_no' : [\r\n      { type : 'required' , message: 'Mobile Number is required.' },\r\n      { type : 'pattern' , message: 'Mobile Number must have 10 digit' }\r\n\r\n     ],\r\n     'device_id' : [\r\n      { type : 'required' , message: 'device_id is required.' },\r\n     ]\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(this.myForm.value);\r\n  }\r\n\r\n  btnClicked(){\r\n    // // alert('btn clicked')\r\n    // this.router.navigate(['main-page']);\r\n  }\r\n\r\n  constructor(private router: Router,private alertController:AlertController,private device: Device,public registrationService:RegistrationService,\r\n  public httpClient:HttpClient,private formsBuilder : FormBuilder ) {\r\n    this.myForm = formsBuilder.group({\r\n      name:['', [Validators.required]],\r\n      email:['', [Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern(/^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/)\r\n      ])]],\r\n      dob:['', [Validators.required]],\r\n      image:['', [Validators.required]],\r\n      address:['', [Validators.required]],\r\n      manager:['', [Validators.required]],\r\n      phone_no:['',[Validators.compose ([\r\n        Validators.required,\r\n        Validators.pattern('^[0-9]{10}$')])\r\n      ]],\r\n      device_id:['', [Validators.required]]\r\n\r\n    });\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n  \r\n  onFileSelected(event){\r\n    const file = (event.target as HTMLInputElement).files[0];\r\n    this.myForm.patchValue({\r\n      image:file\r\n    });\r\n    this.myForm.get('image').updateValueAndValidity()  \r\n    console.log('gtdyuetwhuwierhie',file);\r\n      \r\n  } \r\n\r\n   \r\n\r\nsendPostRequest() {\r\n\r\nthis.registrationService.onUploadproduct(\r\n    this.myForm.value.name,\r\n    this.myForm.value.image,\r\n    this.myForm.value.email,\r\n    this.myForm.value.dob,\r\n    this.myForm.value.address,\r\n    this.myForm.value.manager,\r\n    this.myForm.value.phone_no,\r\n    this.myForm.value.device_id\r\n\r\n    ).subscribe(data => {\r\n        console.log(data);\r\n        this.items = data;\r\n        if(!this.items.error){\r\n        this.alert();\r\n        }else{\r\n        this.alertError();\r\n        }\r\n        }, error => {\r\n        console.log(error);\r\n      });\r\n\r\n}\r\nasync alert(){\r\n  const alert = await this.alertController.create({\r\n    header: 'successfull',\r\n    message: 'User Registration Complete ',\r\n    buttons: [{\r\n      text: 'Ok',\r\n          handler: () => {\r\n            this.router.navigate(['/login']);\r\n          }\r\n    }]\r\n  });\r\n  await alert.present();\r\n}\r\n\r\nasync alertError(){\r\n  const alert = await this.alertController.create({\r\n    header: 'Unseccessfull',\r\n    message: this.items.message,\r\n    buttons: [{\r\n      text: 'Ok',\r\n          handler: () => {\r\n            this.router.navigate(['register']);\r\n          }\r\n    }]\r\n  });\r\n  await alert.present();\r\n}\r\n\r\n\r\n}\r\n"]}