{"version":3,"sources":["webpack:///src/app/pages/login/login.page.html","webpack:///src/app/pages/login/login-routing.module.ts","webpack:///src/app/pages/login/login.module.ts","webpack:///src/app/pages/login/login.page.scss","webpack:///src/app/pages/login/login.page.ts"],"names":["routes","path","component","LoginPageRoutingModule","imports","forChild","exports","LoginPageModule","declarations","LoginPage","router","alertController","device","storage","httpClient","formsBuilder","device_id","uuid","items","key","Key","mytoken","d","Date","h","getHours","m","getMinutes","t","time","Number","_loginUrl","validation_messages","type","message","myForm","group","empId","required","password","console","log","value","headers","append","post","JSON","stringify","subscribe","data","set","error","alertSuccess","alert","create","header","buttons","text","handler","navigate","present","isnewUser","selector","template"],"mappings":"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","file":"pages-login-login-module-es5.js","sourcesContent":["export default \"<!-- <ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button color=\\\"warning\\\" defaultHref=\\\"home\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title >Log In</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header> -->\\r\\n\\r\\n<ion-content padding>\\r\\n  <form [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button color=\\\"light\\\" defaultHref=\\\"home\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    \\r\\n    <div style=\\\"padding-top: 70px; margin-left:10px; margin-right:10px;\\\">\\r\\n      \\r\\n      <h2 style=\\\"margin-left:40%; margin-bottom:40px; color:white; font: 2em sans-serif;;\\\" >LOGIN</h2>  \\r\\n    \\r\\n\\r\\n      <ion-item class=\\\"item\\\"  lines=\\\"none\\\">\\r\\n      <ion-icon class=\\\"custom-icon\\\" name=\\\"mail-sharp\\\"></ion-icon>&nbsp;\\r\\n      <!-- <ion-label position=\\\"inline\\\">Employee ID</ion-label> -->\\r\\n      <ion-input placeholder=\\\"Employee ID\\\" autocomplete=\\\"off\\\" formControlName=\\\"empId\\\" type=\\\"text\\\"></ion-input>\\r\\n      <ng-container *ngFor=\\\"let validation of validation_messages.empId\\\">\\r\\n        <div *ngIf=\\\"myForm.get('empId').hasError(validation.type) && myForm.get('empId').touched\\\">\\r\\n          <small>**{{validation.message}}</small>\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </ion-item>   \\r\\n    \\r\\n    <ion-item class=\\\"item\\\" lines=\\\"none\\\" >\\r\\n      <ion-icon class=\\\"custom-icon\\\" name=\\\"key-sharp\\\"></ion-icon>&nbsp;\\r\\n      <!-- <ion-label position=\\\"inline\\\">Password</ion-label> -->\\r\\n      <ion-input placeholder=\\\"password\\\" autocomplete=\\\"off\\\" formControlName=\\\"password\\\" type=\\\"password\\\"></ion-input>\\r\\n      <ng-container *ngFor=\\\"let validation of validation_messages.password\\\">\\r\\n        <div *ngIf=\\\"myForm.get('password').hasError(validation.type) && myForm.get('password').touched\\\">\\r\\n          <small>**{{validation.message}}</small>\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item class=\\\"item\\\" lines=\\\"none\\\">\\r\\n      <ion-icon class=\\\"custom-icon\\\" name=\\\"desktop-sharp\\\"></ion-icon>&nbsp;\\r\\n      <!-- <ion-label position=\\\"inline\\\">Device Id</ion-label> -->\\r\\n      <ion-input [(ngModel)]=\\\"device_id\\\" autocomplete=\\\"off\\\" type=\\\"text\\\"  formControlName=\\\"device_id\\\" ></ion-input>\\r\\n      <ng-container *ngFor=\\\"let validation of validation_messages.device_id\\\">\\r\\n        <div *ngIf=\\\"myForm.get('device_id').hasError(validation.type) && myForm.get('device_id').touched\\\">\\r\\n          <small class=\\\"text-danger\\\">**{{validation.message}}</small>\\r\\n        </div>\\r\\n</ng-container>\\r\\n    </ion-item>\\r\\n\\r\\n</div>\\r\\n      <ion-button style=\\\"margin-left:50%;\\\" color=\\\"transparent\\\" size=\\\"small\\\" [routerLink]=\\\"['/forgotpassword']\\\">forgot password?</ion-button>\\r\\n         \\r\\n    <ion-row style=\\\"padding-top:40px;\\\"> \\r\\n      <ion-col></ion-col>     \\r\\n      <ion-col>\\r\\n        <ion-button shape=\\\"round\\\" color=\\\"success\\\" (click)=\\\"sendPostRequest()\\\" [disabled]=\\\"!myForm.valid\\\" type=\\\"submit\\\">Sign In</ion-button>\\r\\n        <!-- <ion-button fill=\\\"outline\\\" shape=\\\"round\\\" color=\\\"warning\\\" [routerLink]=\\\"['/forgotpassword']\\\"  expand=\\\"block\\\">Forgot Password?</ion-button>\\r\\n        <ion-button fill=\\\"outline\\\" shape=\\\"round\\\" color=\\\"success\\\" [routerLink]=\\\"['/register']\\\" expand=\\\"block\\\">Create Account?</ion-button> -->\\r\\n      </ion-col>\\r\\n      <ion-col></ion-col>\\r\\n    </ion-row>\\r\\n </form>\\r\\n \\r\\n<p style=\\\"margin-top:100px; margin-left:20%;\\\">Don't have an account? \\r\\n  <ion-button color=\\\"transparent\\\" size=\\\"small\\\" [routerLink]=\\\"['/register']\\\">Sign Up</ion-button>\\r\\n</p>\\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule} from '@angular/common/http';\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    HttpClientModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \"ion-content {\\n  --background: url('1599121471486.JPEG') no-repeat 0 0/100% 100%;\\n  position: relative;\\n  height: auto;\\n  width: 100%;\\n}\\n\\n.item {\\n  color: whitesmoke;\\n  border-radius: 50px;\\n  --border-width: 2px;\\n  --background: rgba(194, 158, 116, 0.459);\\n  margin-top: 5px;\\n}\\n\\n.custom-icon {\\n  font-size: 15px;\\n  color: whitesmoke;\\n}\\n\\nsmall {\\n  color: red;\\n}\\n\\nion-input.placeholder {\\n  --color:rgb(250, 244, 244);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbG9naW4vQzpcXFVzZXJzXFxCSVZBU1xcRGVza3RvcFxcbGF0ZXN0X0VtcGxveWVlX21hbmFnZW1lbnRcXEVtcGxveWVlX21hbmFnZW1lbnQvc3JjXFxhcHBcXHBhZ2VzXFxsb2dpblxcbG9naW4ucGFnZS5zY3NzIiwic3JjL2FwcC9wYWdlcy9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFSSwrREFBQTtFQUVBLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7QUNESjs7QURJQTtFQUNFLGlCQUFBO0VBR0EsbUJBQUE7RUFFQSxtQkFBQTtFQUNBLHdDQUFBO0VBQ0YsZUFBQTtBQ0pBOztBRFNBO0VBQ0ksZUFBQTtFQUNBLGlCQUFBO0FDTko7O0FEa0JBO0VBQ0UsVUFBQTtBQ2ZGOztBRG9CQTtFQUNJLDBCQUFBO0FDakJKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvbG9naW4vbG9naW4ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNvbnRlbnQge1xyXG4gICAgLy8gLS1iYWNrZ3JvdW5kOiB1cmwoc3JjL2Fzc2V0cy9pbWcvUmVnUGFnZS5wbmcpIG5vLXJlcGVhdCB0b3AgY2VudGVyL2NvdmVyIGZpeGVkLCAjZmZmO1xyXG4gICAgLS1iYWNrZ3JvdW5kOiB1cmwoLi4vLi4vLi4vdGhlbWUvMTU5OTEyMTQ3MTQ4Ni5KUEVHKSBuby1yZXBlYXQgMCAwLzEwMCUgMTAwJSA7XHJcbiAgLy8gIC0tYmctY29sb3I6cmdiKDIwOSwgODEsIDgxKTtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGhlaWdodDogYXV0bztcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgLy8gZmlsdGVyOiBibHVyKDVweCk7XHJcbn1cclxuLml0ZW0ge1xyXG4gIGNvbG9yOndoaXRlc21va2U7XHJcbiAgLy8gYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogNDAlO1xyXG4gIC8vIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiA0MCU7XHJcbiAgYm9yZGVyLXJhZGl1czogNTBweDtcclxuICAvLyAtLWJvcmRlci1jb2xvcjogcmdiKDI0NSwgMTkwLCA3MSk7XHJcbiAgLS1ib3JkZXItd2lkdGg6IDJweDtcclxuICAtLWJhY2tncm91bmQ6IHJnYmEoMTk0LCAxNTgsIDExNiwgMC40NTkpO1xyXG5tYXJnaW4tdG9wOiA1cHg7XHJcblxyXG59XHJcblxyXG5cclxuLmN1c3RvbS1pY29uIHtcclxuICAgIGZvbnQtc2l6ZTogMTVweDtcclxuICAgIGNvbG9yOiB3aGl0ZXNtb2tlO1xyXG4gICAgXHJcbiAgfVxyXG4gIFxyXG4vLyAuYm90dG9tX3BvcyB7XHJcbi8vICAgcG9zaXRpb246IGZpeGVkO1xyXG4vLyAgIGxlZnQ6IDA7XHJcbi8vICAgYm90dG9tOiAzMHB4O1xyXG4vLyAgIHJpZ2h0OiAwO1xyXG4vLyB9XHJcbiAgICBcclxuXHJcbnNtYWxse1xyXG4gIGNvbG9yOnJlZDtcclxuICBcclxufVxyXG4gIFxyXG5cclxuaW9uLWlucHV0LnBsYWNlaG9sZGVye1xyXG4gICAgLS1jb2xvclx0OnJnYigyNTAsIDI0NCwgMjQ0KTtcclxuICB9XHJcbiAgIiwiaW9uLWNvbnRlbnQge1xuICAtLWJhY2tncm91bmQ6IHVybCguLi8uLi8uLi90aGVtZS8xNTk5MTIxNDcxNDg2LkpQRUcpIG5vLXJlcGVhdCAwIDAvMTAwJSAxMDAlIDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBoZWlnaHQ6IGF1dG87XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uaXRlbSB7XG4gIGNvbG9yOiB3aGl0ZXNtb2tlO1xuICBib3JkZXItcmFkaXVzOiA1MHB4O1xuICAtLWJvcmRlci13aWR0aDogMnB4O1xuICAtLWJhY2tncm91bmQ6IHJnYmEoMTk0LCAxNTgsIDExNiwgMC40NTkpO1xuICBtYXJnaW4tdG9wOiA1cHg7XG59XG5cbi5jdXN0b20taWNvbiB7XG4gIGZvbnQtc2l6ZTogMTVweDtcbiAgY29sb3I6IHdoaXRlc21va2U7XG59XG5cbnNtYWxsIHtcbiAgY29sb3I6IHJlZDtcbn1cblxuaW9uLWlucHV0LnBsYWNlaG9sZGVyIHtcbiAgLS1jb2xvcjpyZ2IoMjUwLCAyNDQsIDI0NCk7XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient,HttpHeaders,HttpRequest} from '@angular/common/http';\nimport { Storage } from '@ionic/storage';\nimport { AlertController } from '@ionic/angular';\nimport {RegistrationService} from '../../services/registration.service'\nimport { Device } from '@ionic-native/device/ngx';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  device_id=this.device.uuid;\n\n\n  items:any = [];\n  key:string ='items';\n  myForm: FormGroup;\n  Key:string =\"t\";\n  mytoken:any = [];\n  token:any;\n\n  d: Date = new Date();\n  h = this.d.getHours();\n  m = this.d.getMinutes();\n  t = \"\" + this.h + this.m;\n  time= Number(this.t);\n  _loginUrl =\"https://emp-manage90.herokuapp.com/api/login\"\n    \n\n  validation_messages = {\n    'empId' : [\n     { type : 'required' , message: 'EmpId is required.' },\n     //{ type : 'pattern' , message: 'Please enter a valid email.' }\n    ],\n    'password' : [\n      { type : 'required' , message: 'Password is required.' },\n     ],\n     'device_id': [\n      { type : 'required' , message: 'device_id is required.' },\n     ]\n  }\n\n  onSubmit() {\n    console.log(this.myForm.value);\n  }\n\n  btnClicked(){\n    // // alert('btn clicked')\n    // this.router.navigate(['main-page']);\n  }  \n\n  constructor(private router: Router,public alertController: AlertController,private device: Device,public storage:Storage,public httpClient:HttpClient,private formsBuilder : FormBuilder) {\n    this.myForm = formsBuilder.group({\n      empId:['', [Validators.required]],\n      password:['', [Validators.required]],\n      device_id:['', [Validators.required]]\n    });\n  }  \n\n  ngOnInit() {}\n\n  sendPostRequest() {\n    \n    const headers = new HttpHeaders()\n    .append('Content-Type', 'application/json')\n    .append('Access-Control-Allow-Headers', 'Content-Type')\n    .append('Access-Control-Allow-Methods', \"GET, POST, DELETE, PUT\")\n    .append('Access-Control-Allow-Origin', '*');\n\n    this.httpClient.post(this._loginUrl,JSON.stringify(this.myForm.value),{headers} )\n      .subscribe(data => {\n        console.log(data);\n        this.items = data;\n        this.mytoken = data;\n        this.storage.set(this.key,JSON.stringify(this.items));\n        this.storage.set(this.Key,JSON.stringify(this.mytoken));\n        if(!this.items.error){\n          this.alertSuccess()\n        }else{\n          this.alert();\n        }\n       }, error => {\n        console.log(error);\n      });\n     \n}\n\nasync alert(){\n  const alert = await this.alertController.create({\n    header: 'Unseccessfull Login',\n    message: this.items.message,\n    buttons: [{\n      text: 'Ok',\n          handler: () => {\n            this.router.navigate(['/login']);\n          }\n    }]\n  });\n  await alert.present();\n}\nasync alertSuccess(){\n  const alert = await this.alertController.create({\n    header: 'Seccessfull Login',\n    message: 'User Login Successfully',\n    buttons: [{\n      text: 'Ok',\n          handler: () => {\n            if(this.items.data.isnewUser){\n              this.router.navigate(['forgotpassword']);\n            }else{\n              this.router.navigate(['user-home']);\n            }          }\n    }]\n  });\n  await alert.present();\n}\n}\n\n\n\n\n\n// sendPostRequest() {\n//   console.log(this.myForm.value.empId);\n\n//   this.loginService.loginPost(\n//     this.myForm.value.empId,\n//     this.myForm.value.password,\n//     this.myForm.value.device_id\n//     ).subscribe(data => {\n//       console.log(data);\n//       this.items = data;\n//       this.mytoken = data;\n//       this.storage.set(this.key,JSON.stringify(this.items));\n//       this.storage.set(this.Key,JSON.stringify(this.mytoken));\n//       if(!this.items.error){\n//         this.alertSuccess();\n//       }else{\n//         this.alert();\n//       }\n//      }, error => {\n//       console.log(error);\n//     });\n   \n// }"]}